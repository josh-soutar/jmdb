{"version":3,"sources":["webpack:///./src/components/molecules/SearchResultCategories/index.js","webpack:///./src/components/atoms/PersonCredits/index.js","webpack:///./src/components/molecules/SearchResultItem/index.js","webpack:///./src/components/molecules/SearchResultsList/index.js","webpack:///./src/pages/search.js"],"names":["Container","styled","div","Category","props","first","selected","connect","state","search_results","dispatch","selectSearchResultCategory","category_label","type","chosen_category","sort","a","b","order","map","category","index","total_results","onClick","label","key","CircleSeparator","Credits","Credit","last","PersonCredits","department","known_for","credit","length","media_type","name","title","SearchResultItem","itemType","isFirst","data","keyMap","imagePath","poster_path","profile_path","ResultsListItem","className","console","log","navigate","id","Poster","imageUrl","TextSection","TitleContainer","Title","Type","Overview","overview","known_for_department","li","ResultsList","ul","filter","result_category","resultsList","results","result","SearchResultsOuterContainer","SearchResultsInnerContainer","updateSearchResutls","searchTerm","URLSearchParams","document","location","search","substring","get","useState","useEffect","queries","api_call","i","query","fetch","then","res","json","r","push","getAllSearchResults"],"mappings":"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","file":"component---src-pages-search-js-99d476b29535a67bc843.js","sourcesContent":["import React from \"react\";\nimport styled from \"@xstyled/styled-components\";\nimport { connect } from \"react-redux\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid;\n  width: 200px;\n  margin-right: 1;\n`;\n\nconst Category = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 1;\n  border-top: ${(props) => (props.first ? \"0\" : \"1px solid\")};\n  font-weight: ${(props) => (props.selected ? \"bold\" : \"normal\")};\n  &:hover {\n    cursor: pointer;\n    background-color: #f7f7f7;\n    font-weight: bold;\n  }\n`;\n\nfunction SearchResultCategories(props) {\n  //Sort the categories based on 'order' key value\n  function compare(a, b) {\n    if (a.order < b.order) {\n      return -1;\n    }\n    if (a.order > b.order) {\n      return 1;\n    }\n    return 0;\n  }\n\n  if (props && props.search_results) {\n    props.search_results.sort(compare);\n  }\n\n  const handleClick = (chosen_category) => {\n    props.selectSearchResultCategory(chosen_category);\n  };\n\n  return (\n    <Container>\n      {props.search_results &&\n        props.search_results.map((category, index) => {\n          if (category.total_results > 0) {\n            return (\n              <Category\n                onClick={() => {\n                  handleClick(category.label);\n                }}\n                key={category.label}\n                selected={category.selected}\n                first={index === 0}\n              >\n                <div>{category.label}</div>\n                <div>{category.total_results}</div>\n              </Category>\n            );\n          }\n        })}\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const newState = { ...state };\n  return {\n    search_results: newState.search_results,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    selectSearchResultCategory: (category_label) => {\n      dispatch({\n        type: \"SELECTED_SEARCH_CATEGORY\",\n        chosen_category: category_label,\n      });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResultCategories);\n","import React from \"react\";\nimport styled from \"@xstyled/styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst CircleSeparator = styled.div`\n  :before {\n    content: \"â€¢\";\n    padding: 0 5px;\n    font-weight: bold;\n  }\n`;\n\nconst Credits = styled.div`\n  display: flex;\n`;\n\nconst Credit = styled.div`\n  ${({ last }) =>\n    !last &&\n    `\n    padding-right: 5px;\n    :after {\n      content: \",\";\n    }\n`}\n`;\n\nexport default function PersonCredits({ department, known_for }) {\n  return (\n    <Container>\n      <div>{department}</div>\n      <CircleSeparator />\n      <Credits>\n        {known_for &&\n          known_for.map((credit, index) => (\n            <Credit key={index} last={index + 1 === known_for.length}>\n              {credit.media_type == \"tv\" ? credit.name : credit.title}\n            </Credit>\n          ))}\n      </Credits>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport styled from \"@xstyled/styled-components\";\nimport PersonCredits from \"../../atoms/PersonCredits\";\nimport { navigate } from \"@reach/router\";\n\nexport default function SearchResultItem({ isFirst, type, data }) {\n  /* Movies/TV SHows/People have different key names for their data\n  resultKeyMaps standardises key names across all result types*/\n  const keyMap = {\n    name: \"\", // Could be 'title' or 'name'\n  };\n\n  //const [itemType, setItemType] = useState(0);\n  let itemType;\n\n  if (type == \"Movies\" || (type === \"All\" && data.media_type === \"movie\")) {\n    itemType = \"Movie\";\n    keyMap.name = \"title\";\n    data.imagePath = data.poster_path\n      ? `url('https://image.tmdb.org/t/p/w94_and_h141_bestv2${data.poster_path}')`\n      : \"url('https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg')\";\n  } else if (type === \"TV Shows\" || (type === \"All\" && data.media_type === \"tv\")) {\n    itemType = \"TV Show\";\n    keyMap.name = \"name\";\n    data.imagePath = data.poster_path\n      ? `url('https://image.tmdb.org/t/p/w94_and_h141_bestv2${data.poster_path}')`\n      : \"url('https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg')\";\n  } else if (type === \"People\" || (type === \"All\" && data.media_type === \"person\")) {\n    itemType = \"Person\";\n    keyMap.name = \"name\";\n    data.imagePath = data.profile_path\n      ? `url('https://image.tmdb.org/t/p/w94_and_h141_bestv2${data.profile_path}')`\n      : \"url('https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg')\";\n  }\n\n  const handleClick = () => {\n    //redirect to title page based on if clicking movie, tv show or person\n    console.log(`in ${type} onClick`, data);\n\n    if (type == \"Movies\" || (type === \"All\" && data.media_type === \"movie\")) {\n      navigate(`/title?type=movies&id=${data.id}`);\n    } else if (type == \"TV Shows\" || (type === \"All\" && data.media_type === \"tv\")) {\n      navigate(`/title?type=tv&id=${data.id}`);\n    } else if (type == \"People\" || (type === \"All\" && data.media_type === \"person\")) {\n      navigate(`/person?id=${data.id}`);\n    }\n  };\n\n  return (\n    <ResultsListItem\n      className=\"searchResult\"\n      isFirst={isFirst}\n      onClick={() => {\n        handleClick();\n      }}\n    >\n      <Poster imageUrl={data.imagePath}></Poster>\n      <TextSection>\n        <TitleContainer>\n          <Title>{data[keyMap.name]}</Title>\n          {type == \"All\" && <Type>{itemType}</Type>}\n        </TitleContainer>\n        {itemType !== \"Person\" && <Overview>{data.overview}</Overview>}\n        {itemType === \"Person\" && (\n          <Overview>\n            <PersonCredits department={data.known_for_department} known_for={data.known_for}></PersonCredits>\n          </Overview>\n        )}\n      </TextSection>\n    </ResultsListItem>\n  );\n}\n\nconst ResultsListItem = styled.li`\n  border: 1px solid;\n  margin: ${(props) => (props.isFirst ? \"0 0 10px 0\" : \"10px 0\")};\n  display: flex;\n  padding: 1;\n  &:hover {\n    background-color: white;\n    cursor: pointer;\n  }\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  font-weight: bold;\n  padding-bottom: 1;\n`;\n\nconst Type = styled.div`\n  opacity: 0.7;\n  padding: 0 1;\n`;\n\nconst Overview = styled.div``;\n\nconst Poster = styled.div`\n  min-width: 94px;\n  min-height: 141px;\n  background-image: ${(props) => props.imageUrl};\n  background-size: contain;\n  background-repeat: no-repeat;\n`;\n\nconst TextSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 100%;\n  padding: 0 1;\n`;\n","import React from \"react\";\nimport styled from \"@xstyled/styled-components\";\nimport { connect } from \"react-redux\";\nimport SearchResultItem from \"../SearchResultItem\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst ResultsList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nfunction SearchResultList(props) {\n  /*\n    Different result types e.g. movie/tv/person have different object structure. Need to take into \n    consideration which result type has been selected when outputting results\n    */\n  const resultsList = props.search_results || \"\";\n\n  return (\n    <Container>\n      <ResultsList>\n        {resultsList &&\n          resultsList.results.map((result, index) => <SearchResultItem isFirst={index === 0} type={resultsList.label} data={result} key={index} />)}\n      </ResultsList>\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const selected_list = state.search_results.filter((result_category) => result_category.selected === true);\n  return {\n    search_results: selected_list[0],\n  };\n};\n\nexport default connect(mapStateToProps)(SearchResultList);\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"@xstyled/styled-components\";\nimport Layout from \"../layout\";\nimport { connect } from \"react-redux\";\n\nimport SearchResultCategories from \"../components/molecules/SearchResultCategories\";\nimport SearchResultList from \"../components/molecules/SearchResultsList\";\n\nconst SearchResultsOuterContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 1;\n`;\n\nconst SearchResultsInnerContainer = styled.div`\n  max-width: 1300px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nfunction SearchPage(props) {\n  const URLparam = new URLSearchParams(document.location.search.substring(1));\n  const searchTerm = URLparam.get(\"query\");\n\n  const [resultsCategories, setResultsCategories] = useState();\n  const [resultsList, setResultsList] = useState();\n\n  useEffect(() => {\n    getAllSearchResults();\n  }, [searchTerm]);\n\n  return (\n    <Layout>\n      <SearchResultsOuterContainer>\n        <SearchResultsInnerContainer>\n          <SearchResultCategories />\n          <SearchResultList />\n        </SearchResultsInnerContainer>\n      </SearchResultsOuterContainer>\n    </Layout>\n  );\n\n  function getAllSearchResults() {\n    let results = [];\n\n    const queries = [\n      {\n        label: \"All\",\n        api_call: `https://api.themoviedb.org/3/search/multi?api_key=674d2d5130dd9ac19dc844ac2be0895a&language=en-US&query=${searchTerm}`,\n        order: 1,\n        selected: true,\n      },\n      {\n        label: \"Movies\",\n        api_call: `https://api.themoviedb.org/3/search/movie?api_key=674d2d5130dd9ac19dc844ac2be0895a&language=en-US&query=${searchTerm}`,\n        order: 2,\n        selected: false,\n      },\n      {\n        label: \"TV Shows\",\n        api_call: `https://api.themoviedb.org/3/search/tv?api_key=674d2d5130dd9ac19dc844ac2be0895a&language=en-US&query=${searchTerm}`,\n        order: 3,\n        selected: false,\n      },\n      {\n        label: \"People\",\n        api_call: `https://api.themoviedb.org/3/search/person?api_key=674d2d5130dd9ac19dc844ac2be0895a&language=en-US&query=${searchTerm}`,\n        order: 4,\n        selected: false,\n      },\n    ];\n\n    for (let i = 0; i < queries.length; i++) {\n      let query = queries[i];\n      fetch(query.api_call)\n        .then((res) => res.json())\n        .then((r) => {\n          r.label = query.label;\n          r.order = query.order;\n          r.selected = query.selected;\n          r.api_call = query.api_call; //Used to get additional pages of results\n          results.push(r);\n        })\n        .then(() => {\n          if (results.length == queries.length) {\n            //If we've finished calling each API endpoint\n            props.updateSearchResutls(results);\n          }\n        });\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateSearchResutls: (search_results) => {\n      dispatch({\n        type: \"UPDATED_SEARCH_RESULTS\",\n        search_results: search_results,\n      });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\n"],"sourceRoot":""}